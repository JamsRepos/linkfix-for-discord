# 1. Copy this file from docker-compose.example.yml to docker-compose.yml
# 2. In the 'secrets/' directory, create two files:
#     - discord-bot-token.txt
#     - postgres-password.txt
# 3. Populate files with the following:
#     - discord-bot-token.txt: your bot's Discord token
#     - postgres-password.txt: a secure password for Postgres
# 4. execute `docker compose up [-d]` to start the bot

version: "3.8"

x-db-config: &db-config
  POSTGRES_USER: linkfix
  POSTGRES_PASSWORD: change.me.please

services:
  linkfix_bot:
    # replace `image: <image>` with `build: .` for local dev environments
    image: ghcr.io/podaboutlist/linkfix-for-discord:latest
    environment:
      <<: *db-config
      DISCORD_BOT_TOKEN: your.token.here
      LINKFIX_DEBUG: 0
      INSTAGRAM_FIX_URL: ddinstagram.com
      PIXIV_FIX_URL: phixiv.net
      REDDIT_FIX_URL: vxreddit.com
      TIKTOK_FIX_URL: vxtiktok.com
      TWITTER_FIX_URL: fxtwitter.com
      YOUTUBE_FIX_URL: youtu.be
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - "postgres:postgres.docker"

  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      <<: *db-config
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./src/bot/database/initdb/:/docker-entrypoint-initdb.d
    ports:
      - "127.0.0.1:15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_USER} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s

volumes:
  pgdata:
